Non-Functional Requirements
A non-functional requirement is a requirement that specifies criteria that can be used to judge the
operation of a system, rather than specific behaviors. The plan for implementing non-functional
requirements is detailed in the system architecture. Non-functional requirements define how a
system is supposed to be. Outlined below are some of the expectations of the system when
implemented:

a) Reliability
The voting system (e-vote) shall be robust enough to have a high degree of fault
tolerance. For example, if there is an invalid entry, the system should not crash and shall
identify the invalid input and produce a suitable error message.
The Online voting system shall be able to recover from hardware failures, power
The Online voting system shall impose a successful voter determination strategy in order
to determine a successful voter in order to avoid multi voting.
The Online voting system shall be available during the voting hours of the voting day.
Failures and other natural catastrophes should rollback the databases to their most recent
valid state.

b) Security
The system should implement strategies to counter hacking and access by unauthorized persons. The application needs to be secure enough and should enable users to access it depending on the level of the user. e.g. An administrator will be register voters, a authorized voter will only be allowed to vote.
The election system must be sufficiently robust to withstand a variety of fraudulent behaviors
and must be sufficiently transparent and comprehensible that voters and candidates can
accept the results of an election.

c) Performance
Response time of e-vote should be less than 5 seconds most of the time. Response time
refers to the time that the user should wait for before getting a response from the system after querying it.E-vote shall show no visible deterioration.

d) Integrity
Only the system administrator has the right to register voters. The system should be
physically and logically secure to protect the files. The administrators need to be
authenticated before having access to the system

e) Scalability:
The system should be able to expand to meet future needs of the organization and still be
able to serve the purpose for which it was build.

f) Usability
Users should be able to understand the menu and options provided by the system.The system shall provide an easy-to- use interface so that the users do not strain to interact with the system.
Any notification or error messages generated by the system shall be clear, polite and free
of jargon.The interface should be intuitive and easily navigable.

g) Availability and accessibility
The system should be up and running whenever needed.



h) Inte roperability
The system should be able to work with other existing systems. It should ensure backward and forward compatibility.
